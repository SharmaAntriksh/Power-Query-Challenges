table Solution2
	lineageTag: b505ebe7-08a2-4bd1-805f-359e3e6c88e5

	column String
		dataType: string
		lineageTag: 3a8751d7-262c-420b-95a0-e589104ada25
		summarizeBy: none
		sourceColumn: String

		annotation SummarizationSetBy = Automatic

	column Digits
		dataType: int64
		formatString: 0
		lineageTag: bcf8e9a1-cdad-425e-a62e-30eb52af549f
		summarizeBy: sum
		sourceColumn: Digits

		annotation SummarizationSetBy = Automatic

	column 'Sum of Digits'
		dataType: int64
		formatString: 0
		lineageTag: 626ceef7-9a31-45fc-a99d-4f36ef2d4330
		summarizeBy: sum
		sourceColumn: Sum of Digits

		annotation SummarizationSetBy = Automatic

	partition Solution2 = m
		mode: import
		source = ```
				let
				    Source = 
				        List.Transform ( 
				            RawData[String], 
				            (Row)=> 
				                let
				                    CurrentRow = Row,
				                    TextToList = Text.ToList ( Row ),
				                    NumbersList = {"0".."9"},
				                    Intersect = List.Intersect ( { TextToList, NumbersList } ),
				                    Digits = Number.From ( Text.Combine ( Intersect ) ),
				                    SumOfDigits = List.Sum ( List.Transform ( Intersect, each Number.From ( _ ) ) ),
				                    Result = {Row, Digits, SumOfDigits}
				                in
				                    Result
				        ),
				    TableFromLists = 
				        Table.FromRows ( 
				            Source, 
				            type table [String = text, Digits = Int64.Type, Sum of Digits = Int64.Type] 
				        )
				in
				    TableFromLists
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

